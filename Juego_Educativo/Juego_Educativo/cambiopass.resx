<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        I/MRJPQSLPURPvcPUfcsceiT17Ga4qKS4ZmI35B93IVv2XgAAABl1m9t2HZ324CE3oyN4JWV4Z2c46SO
        yrYvT+QRK/QRLfYRLfYRLPYRKPURJvURI/QSI/QaM/EsT+4aOfERMfYRQvYQU/ZAg96W2q6a4qGS4ZqJ
        35GA3Ydz2nxr13MAAABk1W1o13Fu2Xd53IKD3ouM4JST4Zua4qKFx7pWgNMdM+waOPIWMfEWLPITKPMe
        PPAXMvC4y/Z5mvGwzPYWVPQdYvJboNKX3aqX4qCR4ZmJ35GA3Yh12n1r2HRn1nAAAABf1Ghl1W1o13Fu
        2Xd324CB3YqJ35GN2KLK5OuRwd6n1svG4OrC2fFAaeusvveNqfJYhu+twvSavu2azdGQveCt0uS91/F+
        zKuO4JWG3o5+3IZ02nxr2HRn1m9i1WsAAABW0WBd02Zh1Wtm1m5r13Rz2nx73ISC3YqV2q+t0ea749Bw
        wK604cxxtMPP4vaEsOl3quay2dqhyuB5uc2P16yYxODP4vR1yaGA3Yh424Fv2Xho1nFk1m1f1Gla0mQA
        AABPz1lU0F1a0mRd1Gdh1Gpl1W5r13Rx2XqL1qSs0eS04stpv6Wv4Mdmua293OaQxdGf1sis3M2KwdC8
        2e9wvLeLw9LH4ett0Ilv2Hho1nJj1Wxf1Glc02ZY0WFSz1sAAABRz1pPz1hQz1lU0F1Y0WBa0mNb0mVd
        02d805ap0OJZy29LylxUymtOy2BVzGhozYFQzV1RzGBkzH9cyndJyFtky3xp0X5g1Gpc02Za0mRZ0mJW
        0WBTz1xPz1lOzlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>